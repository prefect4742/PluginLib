apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-kapt"

ext {
    versionMajor = 0
    versionMinor = 1
    versionPatch = 20
}

android {
    compileSdkVersion 28
    defaultConfig {
        minSdkVersion 23
        targetSdkVersion 28

        versionCode = versionMajor * 10000 + versionMinor * 100 + versionPatch
        versionName = "$versionMajor.$versionMinor.$versionPatch"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // Avoid Kotlin docs error
    tasks.withType(Javadoc) {
        enabled = false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

kapt {
    arguments {
        arg("pluginlib.provider.generated.package", "com.prefect47.pluginlib")
        arg("pluginlib.provider.generated.classname", "PluginLibProvidersImpl")
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'

    api 'com.google.android.material:material:1.0.0'

    api "androidx.appcompat:appcompat:$androidx_appcompat_version"
    api "androidx.preference:preference:$androidx_version"
    api "androidx.constraintlayout:constraintlayout:$androidx_constraintlayout_version"
    implementation "androidx.lifecycle:lifecycle-extensions:$androidx_arch_version"
    implementation "androidx.core:core-ktx:$androidx_ktx_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlin_coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlin_coroutines_version"

    api "com.prefect47:pluginlib_annotations:$annotations_version"

    compileOnly "com.prefect47:pluginlib_annotationprocessor:$ap_version"
    kapt "com.prefect47:pluginlib_annotationprocessor:$ap_version"
    annotationProcessor "com.prefect47:pluginlib_annotationprocessor:$ap_version"

    // Dagger2
    implementation 'com.google.dagger:dagger-android:2.20'
    implementation 'com.google.dagger:dagger-android-support:2.20' // if you use the support libraries
    kapt 'com.google.dagger:dagger-android-processor:2.20'
    kapt 'com.google.dagger:dagger-compiler:2.20'
}

if (rootProject.file('release-bintray.gradle').exists()) {
    apply from: rootProject.file('release-bintray.gradle')
}
